html {      
    // button
    var(button-border-width): 1dip;
    var(button-border-radius): 0;
    
    var(button-text): rgb(0, 0, 0);  
    var(button-background): rgb(225,225,225);
    var(button-border-color): rgb(173,173,173);
    
    var(button-text-disabled): rgb(180,180,180);
    var(button-hover-background): rgb(229,241,251);
    var(button-hover-border): rgb(0,120,215);
    var(button-focus-color): rgba(49,132,253,50%);
}

/* button */
@mixin STD-BUTTON-HOVER {
    background: color(button-hover-background);
    border-width: length(button-border-width);
    border-radius: length(button-border-radius);
    border-style: solid;
    border-color: color(button-hover-border);
}

@mixin STD-BUTTON-ACTIVE {
  foreground: morph(white, opacity:30%);
}

@mixin STD-BUTTON-DISABLED {
    border-color: currentColor;

    background: transparent;

    color: color(button-text-disabled);
}

@mixin STD-BUTTON-FOCUS {
    outline: none;
}

@mixin STD-BUTTON-NO-FOCUS {
    outline: none;
}

@set std-button < std-button-base
{
    :root {

    border-width: length(button-border-width);
    border-radius: length(button-border-radius);
    border-style: solid;
    border-color: color(button-border-color);

    line-height: height(100%);
    white-space: nowrap;
    
    background: color(button-background);

    color: color(button-text);
    line-height: height(100%);
    vertical-align: middle;

    white-space: nowrap;
  }

:root.transparent {
    background: transparent;
    border-color: transparent;
}

  // must come after classes in order to overwrite classes colors
    :root:hover     { @STD-BUTTON-HOVER; }
    :root:active    { @STD-BUTTON-ACTIVE; }
    :root:disabled  { @STD-BUTTON-DISABLED; }
    :root:focus     { @STD-BUTTON-NO-FOCUS; }
    :root:tab-focus { @STD-BUTTON-FOCUS; }
}

html {
    width: 400dip;
    height: 200dip;
}

body {
    border: 1dip solid rgb(112,112,112);

    font-family: "Tahoma";
    color: black;
}

header {
    width: *;

    padding-left: 10dip;
}

header > i {
    display: none !important;
}

header > span {
}

// window button
header > window-button {
    display: inline;

    behavior: clickable;

    width: 30dip;
    height: 25dip;

    border-radius: 0;

    foreground-size: 11dip;
    foreground-repeat: no-repeat;
    foreground-position: 50% 50%;

    stroke: currentcolor;
    stroke-width: 1dip;

    transition: background-color linear 100ms;
}

header > window-button:hover {
    background: rgba(0,0,0,0.25);
}

// close button
header > window-button[role="window-close"] {
    stroke-width: 1.44dip;
    foreground-image: url(path: M0,0 L10,10 M0,10 L10,0);
}

header > window-button[role="window-close"]:hover {
    background: rgb(232,17,35);
    stroke: #fff;
}

main > i {
    font-size: 40dip;
}

main > #message {
    vertical-align: top;
}

footer {
    border-spacing: 8dip;

    border-top: 1px solid rgb(223,223,223);

    background: rgb(240,240,240);
}

footer > button {
    padding: 0 15dip;
}

footer > button:first-child {
}

footer > button:last-child {
    margin-right: 0;
}
